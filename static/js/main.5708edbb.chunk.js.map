{"version":3,"sources":["comps/opportunity.js","comps/EditModal.js","comps/Portal.js","App.js","index.js"],"names":["Opportunity","portal","this","props","opp","key","id","src","profile_photo_urls","thumb","alt","title","location","Button","color","size","className","onClick","editOpportunity","bind","Component","EditModal","setState","editOpModal","editOpData","description","Modal","isOpen","state","toggle","toggleEditOpModal","ModalHeader","ModalBody","FormGroup","Label","for","Input","value","onChange","e","target","console","log","ModalFooter","updateOpportunity","Portal","curPage","isLoaded","opportunities","page","totPages","scrolling","handleScroll","windowHeight","window","innerHeight","document","documentElement","offsetHeight","body","html","docHeight","Math","max","scrollHeight","clientHeight","pageYOffset","loadMore","refreshOpList","req","process","axios","get","then","response","data","paging","total_pages","prevState","scrollListner","addEventListener","reqInfo","style","position","top","left","Spinner","width","height","type","map","opportunity","Jumbotron","Table","dark","App","ReactDOM","render","getElementById"],"mappings":"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","file":"static/js/main.5708edbb.chunk.js","sourcesContent":["import React, { Component } from 'react'\nimport { Button } from 'reactstrap';\n\nclass Opportunity extends Component {\n\n\n  render() {\n\n    let portal = this.props.portal\n    let opp = this.props.opp\n    return (\n      <tr key={opp.id}>\n        <td><img src={opp.profile_photo_urls.thumb} alt=\"Pic\" /></td>\n        <td>{opp.id}</td>\n        <td>{opp.title}</td>\n        <td>{opp.location}</td>\n        <td>\n          <Button color=\"primary\" size=\"sm\" className=\"mr-2\" onClick={portal.editOpportunity.bind(portal, opp.id, opp.title)}>Edit</Button>\n        </td>\n      </tr>\n\n\n    );\n\n  }\n\n\n}\n\nexport default Opportunity","import React, { Component } from 'react'\nimport { Input, FormGroup, Label, Modal, ModalHeader, ModalBody, ModalFooter, Button } from 'reactstrap';\n\n\nclass EditModal extends Component {\n\n\n  //Editing opportunity data\n  updateOpportunity() {\n    ///https://api-staging.aiesec.org/v2/opportunities/8329?access_token=dd0df21c8af5d929dff19f74506c4a8153d7acd34306b9761fd4a57cfa1d483c&api_key=dd0df21c8af5d929dff19f74506c4a8153d7acd34306b9761fd4a57cfa1d483c\n\n    /* \n        let { title, location} = this.state.editOpData;\n        let req = 'https://api-staging.aiesec.org/v2/opportunities/';\n        let key = '?api_key=dd0df21c8af5d929dff19f74506c4a8153d7acd34306b9761fd4a57cfa1d483c';//////////////000000\n        console.log(req + this.state.editOpData.id);\n        axios.patch(req + this.state.editOpData.id + key, {\n          title, location\n    \n        }).then((response) => {\n          this.refreshOpList();\n        }); \n    */\n   this.props.portal.setState({\n      editOpModal: false, editOpData: { id: '', title: '', description: '' }\n    })\n  }\n\n\n  render() {\n\n    let portal = this.props.portal\n    return (\n      <Modal isOpen={portal.state.editOpModal} toggle={portal.toggleEditOpModal.bind(portal)}>\n        <ModalHeader toggle={portal.toggleEditOpModal.bind(portal)}>Edit Opportunity</ModalHeader>\n        <ModalBody>\n          <FormGroup>\n            <Label for=\"title\">Title</Label>\n            <Input id=\"title\" value={portal.state.editOpData.title} onChange={(e) => {\n\n              let { editOpData } = portal.state;\n\n              editOpData.title = e.target.value;\n\n              portal.setState({ editOpData });\n\n            }} />\n          </FormGroup>\n\n\n          <FormGroup>\n            <Label for=\"description\">Description</Label>\n            <Input id=\"description\" value={portal.state.editOpData.description} onChange={(e) => {\n\n              let { editOpData } = portal.state;\n\n              editOpData.description = e.target.value;\n              console.log(editOpData.description);\n              portal.setState({ editOpData });\n\n            }} />\n\n          </FormGroup>\n\n        </ModalBody>\n        <ModalFooter>\n          <Button color=\"primary\" onClick={this.updateOpportunity.bind(this)}>Update Opportunity</Button>{' '}\n          <Button color=\"secondary\" onClick={portal.toggleEditOpModal.bind(portal)}>Cancel</Button>\n        </ModalFooter>\n      </Modal>\n    );\n  }\n}\n\nexport default EditModal","import React, { Component } from 'react';\nimport Opportunity from './opportunity'\nimport axios from 'axios';\nimport { Table, Modal, ModalHeader, Spinner, Jumbotron } from 'reactstrap';\nimport EditModal from './EditModal';\n\n\nclass Portal extends Component {\n\n  curPage = 1;\n  state = {\n\n    isLoaded: false,\n\n    opportunities: [],\n\n    page: 1,\n    totPages: null,\n    scrolling: false,\n\n    editOpData: {\n      id: '',\n      title: '',\n      description: ''\n    },\n    editOpModal: false\n  }\n\n  componentDidMount() {\n    this.refreshOpList();\n    //Scroll Listener\n    this.scrollListner = window.addEventListener('scroll', (e) => {\n      this.handleScroll(e)\n    })\n  }\n\n  //Infinite scroll function\n  handleScroll = (e) => {\n    const { scrolling, totPages, page } = this.state\n    if (scrolling) return\n    if (totPages <= page) return\n\n    const windowHeight = \"innerHeight\" in window ? window.innerHeight : document.documentElement.offsetHeight;\n    const body = document.body;\n    const html = document.documentElement;\n    const docHeight = Math.max(body.scrollHeight, body.offsetHeight, html.clientHeight, html.scrollHeight, html.offsetHeight);\n    const windowBottom = windowHeight + window.pageYOffset;\n    if (windowBottom >= docHeight) {\n      this.loadMore()\n    } else {\n      return\n    }\n  }\n\n  toggleEditOpModal() {\n    this.setState({\n      editOpModal: !this.state.editOpModal\n    });\n\n\n  }\n\n\n    //PATCH request for editing opportunity data\n    editOpportunity(id, title) {\n\n      let reqInfo = process.env.REACT_APP_SERVER + process.env.REACT_APP_OBJ_OP;\n      let accTok = '?access_token=' + process.env.REACT_APP_ACC_TOK;\n  \n      axios.get(reqInfo + '/' + id + accTok).then((response) => {\n        let description = response.data.description;\n        this.setState({\n          editOpData: { id, title, description }, editOpModal: !this.state.editOpModal\n        });\n      })\n  \n    }\n  \n\n  //Requesting data - GET\n  refreshOpList = () => {\n    const { opportunities, page } = this.state\n    console.log(page);\n    const req = process.env.REACT_APP_SERVER + process.env.REACT_APP_OBJ_OP + '?access_token=' + process.env.REACT_APP_ACC_TOK + '&page=' + page\n    axios.get(req).then((response) => {\n      this.setState({\n        opportunities: [...opportunities, ...response.data.data],\n        scrolling: false,\n        totPages: response.data.paging.total_pages,\n        isLoaded: true\n      })\n    })\n\n  }\n\n\n  loadMore = () => {\n    this.setState(prevState => ({\n      page: prevState.page + 1,\n      scrolling: true\n    }), this.refreshOpList)\n\n  }\n\n\n  render() {\n    var isLoaded = this.state.isLoaded;\n    if (!isLoaded) {\n      let style = {\n        position: 'fixed',\n        top: '50%',\n        left: '50%',\n      };\n      return <div style={style}><Spinner style={{ width: '5rem', height: '5rem' }} type=\"grow\" color=\"primary\" />      </div>;\n    }\n\n    //Displaying loaded data to the browser\n    let opportunities = this.state.opportunities.map((opportunity) => {\n      return (\n        <Opportunity opp={opportunity} portal={this} key={opportunity.id} />\n      )\n    });\n    return (\n\n      <div>\n        {/* Edit data modal */}\n        <EditModal portal={this} />\n\n        <Jumbotron>\n\n          <h1 className=\"display-3\">AIESEC Opportunities Portal</h1>\n          <p className=\"lead\">This is project created by Ravidu Silva</p>\n          <p className=\"lead\">Email - ravidu.silva@aiesec.net</p>\n          <hr className=\"my-2\" />\n          <br></br>\n          <Table dark className=\"opportunities\">\n            <thead>\n              <tr>\n                <th>Pic</th>\n                <th>Number</th>\n                <th>Title</th>\n                <th>Location</th>\n                <th>Controls</th>\n              </tr>\n            </thead>\n            <tbody>\n              {opportunities}\n            </tbody>\n          </Table>\n\n        </Jumbotron>\n\n\n        <Modal isOpen={this.state.scrolling}>\n          <ModalHeader>Loading Opportunities...</ModalHeader>\n        </Modal>\n\n\n      </div>\n\n    );\n  }\n}\n\nexport default Portal;\n","import React, { Component } from 'react';\nimport Portal from './comps/Portal'\n\nclass App extends Component {\n\n  render() {\n    \n    return (\n\n      <div className=\"App container\">\n        <Portal />\n      </div>\n\n    );\n  }\n}\n\nexport default App;\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport 'bootstrap/dist/css/bootstrap.min.css';\nimport './index.css';\nimport App from './App';\n\nReactDOM.render(<App />, document.getElementById('root'));\n"],"sourceRoot":""}